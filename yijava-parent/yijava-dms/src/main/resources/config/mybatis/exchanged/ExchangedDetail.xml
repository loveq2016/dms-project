<?xml version="1.0" encoding="UTF-8" ?>  
    <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ExchangedDetail">
	<sql id="adsWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(exchanged_code)"> and exchanged_code = #{exchanged_code}</if>
		<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(batch_no)">and batch_no=#{batch_no}</if>
		<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(product_item_number)"> and product_item_number=#{product_item_number}</if>
		<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(fk_storage_id)">and fk_storage_id=#{fk_storage_id}</if>
	</trim>
	</sql>
	<sql id="adsOrder">
		<choose>  
	       <when test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(orderSql)">  
	            order by ${orderSql}
	       </when>
	   </choose>
	</sql>
    <select id="selectByObjectcount" resultType="long"> 
<!-- 		SELECT COUNT(*) FROM( -->
<!-- 			select t1.*,t2.storage_name,t3.inventory_number from dms.tb_exchanged_detail t1  -->
<!-- 			left join dms.tb_storage t2 ON t2.id = t1.fk_storage_id -->
<!-- 			LEFT JOIN dms.tb_storage_detail t3 ON t2.id = t3.fk_storage_id -->
<!-- 			WHERE t1.batch_no = t3.batch_no AND t1.product_item_number=t3.product_item_number -->
<!-- 		) t -->
		SELECT COUNT(1) FROM(
			select t1.*,t3.storage_name,(
				select count(1) from dms.tb_storage_pro_detail t4 where t4.fk_storage_id = t1.fk_storage_id
				and t4.fk_dealer_id = t2.dealer_id and t4.product_item_number = t1.product_item_number
				and t4.batch_no = t4.batch_no and t4.valid_date = t1.valid_date and t4.status = 1 
			) as inventory_number from dms.tb_exchanged_detail t1 
			left join dms.tb_exchanged t2 on t1.exchanged_code = t2.exchanged_code 
			left join dms.tb_storage t3 ON t3.id = t1.fk_storage_id
		) t
		<include refid="adsWhere"/>
	</select>
 	<select id="selectByObject" resultType="dms.yijava.entity.exchanged.ExchangedDetail">
<!-- 		SELECT * FROM( -->
<!-- 			select t1.*,t2.storage_name,t3.inventory_number from dms.tb_exchanged_detail t1  -->
<!-- 			left join dms.tb_storage t2 ON t2.id = t1.fk_storage_id -->
<!-- 			LEFT JOIN dms.tb_storage_detail t3 ON t2.id = t3.fk_storage_id -->
<!-- 			WHERE t1.batch_no = t3.batch_no AND t1.product_item_number=t3.product_item_number -->
<!-- 		) t -->
		SELECT * FROM(
			select t1.*,t3.storage_name,(
				select count(1) from dms.tb_storage_pro_detail t4 where t4.fk_storage_id = t1.fk_storage_id
				and t4.fk_dealer_id = t2.dealer_id and t4.product_item_number = t1.product_item_number
				and t4.batch_no = t4.batch_no and t4.valid_date = t1.valid_date and t4.status = 1 
			) as inventory_number from dms.tb_exchanged_detail t1 
			left join dms.tb_exchanged t2 on t1.exchanged_code = t2.exchanged_code 
			left join dms.tb_storage t3 ON t3.id = t1.fk_storage_id
		) t
		<include refid="adsWhere"/>
		<include refid="adsOrder"/>
	    limit #{offset},#{pagesize}
	</select>
	
	<select id="selectExchangedDetail" resultType="dms.yijava.entity.exchanged.ExchangedDetail">
		select * from dms.tb_exchanged_detail 
		<include refid="adsWhere"/>
	</select>
	
	<select id="selectExchangedDetailMap" resultType="dms.yijava.entity.exchanged.ExchangedDetail">
		select * from dms.tb_exchanged_detail  where exchanged_code = #{exchanged_code}
	</select>


	<select id="selectExchangedProDetailTotalNumber" resultType="dms.yijava.entity.exchanged.ExchangedDetail">
		SELECT exchanged_detail_id as id,COUNT(1) as exchanged_number 
		FROM tb_exchanged_pro_detail WHERE exchanged_detail_id = #{id}
	</select>
	
	<update id="updateTotalNumber" parameterType="dms.yijava.entity.exchanged.ExchangedDetail">
		update dms.tb_exchanged_detail set exchanged_number = #{exchanged_number} WHERE id=#{id}
	</update>
	
	
	<insert id="insert" parameterType="dms.yijava.entity.exchanged.ExchangedDetail">
		insert into dms.tb_exchanged_detail (fk_storage_id,exchanged_code,product_item_number,models,batch_no,exchanged_number,valid_date) 
    	values(#{fk_storage_id},#{exchanged_code},#{product_item_number},#{models},#{batch_no},0,#{valid_date})
    </insert>
	
	<delete id="deleteByPrimaryKey" parameterType="int">
    	delete from dms.tb_exchanged_detail where id = #{id}
    </delete>
    
    <delete id="deleteByExchangedCode" parameterType="String">
   		 delete from dms.tb_exchanged_detail where exchanged_code = #{exchanged_code}
    </delete>
    
    
    
    	
	<select id="selectExchangedDetailWordMap" resultType="dms.yijava.entity.exchanged.ExchangedDetail">
<!-- 			select t2.order_code,t3.cname,t1.product_item_number, -->
<!-- 			t1.models,t2.newModels,t1.batch_no,t1.exchanged_number,t1.valid_date from  -->
<!-- 			dms.tb_exchanged_detail t1  -->
<!-- 			left join dms.tb_exchanged_pro_detail t2 on t1.id = t2.exchanged_detail_id -->
<!-- 			inner join dms.tb_product t3 on t1.product_item_number = t3.item_number -->
<!-- 			where t1.exchanged_code= #{exchanged_code} -->
<!-- 			group by order_code,product_item_number,batch_no,valid_date -->
				select t2.order_code,t3.cname,t3.models,t2.newModels,t2.batch_no,1 as exchanged_number ,t1.valid_date,t2.product_sn from 
				dms.tb_exchanged_detail t1 
				left join dms.tb_exchanged_pro_detail t2 on t1.id = t2.exchanged_detail_id
				inner join dms.tb_product t3 on t1.product_item_number = t3.item_number
				where t1.exchanged_code= #{exchanged_code}
	</select>

</mapper>