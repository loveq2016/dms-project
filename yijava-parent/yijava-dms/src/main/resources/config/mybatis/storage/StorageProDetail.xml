<?xml version="1.0" encoding="UTF-8" ?>  
    <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StorageProDetail">

 	<select id="selectStorageProDetailBySn" resultType="dms.yijava.entity.storage.StorageProDetail">
		select * from  dms.tb_storage_pro_detail 
		where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id} and batch_no = #{batch_no} and product_sn = #{product_sn} and status = 1
	</select>
	
	 <select id="selectStorageProDetail" resultType="dms.yijava.entity.storage.StorageProDetail">
		select * from  dms.tb_storage_pro_detail 
		where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id} and batch_no = #{batch_no} 
		<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(status)">and status = #{status}</if>
	</select>
	
	
	<sql id="adsWhere">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(fk_storage_id)">and fk_storage_id =#{fk_storage_id}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(dealer_id)">and fk_dealer_id = #{dealer_id}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(dealer_ids)">and fk_dealer_id in(#{dealer_ids})</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(batch_no)">and batch_no =#{batch_no}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(models)">and models =#{models}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(status)">and status = #{status}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(product_sn)">and product_sn like CONCAT('%','${product_sn}','%' ) </if>
		</trim>
	</sql>
	<sql id="adsOrder">
		<choose>
		    <when test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(orderSql)">  
		         ORDER BY ${orderSql}
		    </when>
	    </choose>
	</sql>
    <select id="selectByObjectcount" resultType="long">
		select count(1) from (
			select t1.*,t2.storage_name,t3.models from dms.tb_storage_pro_detail t1 
			left join dms.tb_storage t2 on t1.fk_storage_id = t2.id
			left join dms.tb_product t3 on t1.product_item_number = t3.item_number
		)t
		<include refid="adsWhere"/>
	</select>
 	<select id="selectByObject" resultType="dms.yijava.entity.storage.StorageProDetail">
		select * from (
		select t1.*,t2.storage_name,t3.models from dms.tb_storage_pro_detail t1 
		left join dms.tb_storage t2 on t1.fk_storage_id = t2.id
		left join dms.tb_product t3 on t1.product_item_number = t3.item_number
		)t
		<include refid="adsWhere"/>
		<include refid="adsOrder"/>
	    limit #{offset},#{pagesize}
	</select>
	
	
	
	
	
	
	<update id="lockSn" parameterType="dms.yijava.entity.storage.StorageProDetail">
		update dms.tb_storage_pro_detail  set status = 0 where id = #{id}
	</update>
	
	<update id="unlockSn" parameterType="dms.yijava.entity.storage.StorageProDetail">
		update dms.tb_storage_pro_detail  set status = 1 where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id} 
		and batch_no = #{batch_no} and product_sn = #{product_sn}
	</update>
    
    
    <insert id="saveSnSub" parameterType="dms.yijava.entity.storage.StorageProDetail">
    	insert into dms.tb_storage_pro_detail (fk_storage_id,fk_dealer_id,product_item_number,fk_order_code,status,batch_no,product_sn,valid_date)
    	values(#{fk_storage_id},#{fk_dealer_id},#{product_item_number},#{fk_order_code},1,#{batch_no},#{product_sn},#{valid_date})
    </insert>
    
    
    <update id="updateSnSub" parameterType="dms.yijava.entity.storage.StorageProDetail">
   		update dms.tb_storage_pro_detail  set status = 1 , fk_storage_id=#{fk_storage_id} , fk_dealer_id=#{fk_dealer_id}
   		where batch_no = #{batch_no} and product_sn = #{product_sn}
    </update>
    
    
    
</mapper>