<?xml version="1.0" encoding="UTF-8" ?>  
    <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="StorageDetail">
	<sql id="adsWhere">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(fk_storage_id)">and fk_storage_id = #{fk_storage_id}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(dealer_id)">and fk_dealer_id = #{dealer_id}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(dealer_ids)">and fk_dealer_id in(${dealer_ids})</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(models)">and models like CONCAT('%','${models}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(product_item_number)">and product_item_number = #{product_item_number}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(batch_no)">and batch_no like CONCAT('%','${batch_no}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(dealer_name)">and dealer_name like CONCAT('%','${dealer_name}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(storage_name)">and storage_name like CONCAT('%','${storage_name}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(valid_date)">and valid_date = #{valid_date}</if>
		</trim>
	</sql>
	<sql id="adsOrder">
		<choose>
		    <when test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(orderSql)">  
		         ORDER BY ${orderSql}
		    </when>
	    </choose>
	</sql>
    <select id="selectByObjectcount" resultType="long">
<!-- 		select count(1) from ( -->
<!-- 			select t1.*,t2.cname AS product_cname,t3.storage_name,t4.dealer_name from dms.tb_storage_detail t1  -->
<!-- 			inner join dms.tb_product t2 on t1.product_item_number = t2.item_number -->
<!-- 			inner join dms.tb_storage t3 on t1.fk_storage_id = t3.id -->
<!-- 			inner join dms.tb_dealer t4 on t1.fk_dealer_id = t4.dealer_id -->
<!-- 		)t -->
			select count(1) from ( 
			select t1.id,t1.fk_storage_id,t1.fk_dealer_id,t1.product_item_number,t2.models,t1.batch_no,
			(
			select count(1) from dms.tb_storage_pro_detail t where t.fk_storage_id = t1.fk_storage_id
			and t.fk_dealer_id = t1.fk_dealer_id and t.product_item_number = t1.product_item_number
			and t.batch_no = t1.batch_no and t.`status` = 1 
			) as inventory_number ,t1.valid_date,t1.last_time,
			t2.cname AS product_cname,t3.storage_name,t4.dealer_name 
			from dms.tb_storage_pro_detail t1
			inner join dms.tb_product t2 on t1.product_item_number = t2.item_number 
			inner join dms.tb_storage t3 on t1.fk_storage_id = t3.id 
			inner join dms.tb_dealer t4 on t1.fk_dealer_id = t4.dealer_id 
			group by t1.fk_storage_id,t1.fk_dealer_id,t1.product_item_number,t1.batch_no
			)t
		<include refid="adsWhere"/>
	</select>
 	<select id="selectByObject" resultType="dms.yijava.entity.storage.StorageDetail">
<!-- 		select * from ( -->
<!-- 			select t1.*,t2.cname AS product_cname,t3.storage_name,t4.dealer_name from dms.tb_storage_detail t1  -->
<!-- 			inner join dms.tb_product t2 on t1.product_item_number = t2.item_number -->
<!-- 			inner join dms.tb_storage t3 on t1.fk_storage_id = t3.id -->
<!-- 			inner join dms.tb_dealer t4 on t1.fk_dealer_id = t4.dealer_id -->
<!-- 		)t -->
			select * from ( 
			select t1.id,t1.fk_storage_id,t1.fk_dealer_id,t1.product_item_number,t2.models,t1.batch_no,
			(
			select count(1) from dms.tb_storage_pro_detail t where t.fk_storage_id = t1.fk_storage_id
			and t.fk_dealer_id = t1.fk_dealer_id and t.product_item_number = t1.product_item_number
			and t.batch_no = t1.batch_no and t.`status` = 1 
			) as inventory_number ,t1.valid_date,t1.last_time,
			t2.cname AS product_cname,t3.storage_name,t4.dealer_name 
			from dms.tb_storage_pro_detail t1
			inner join dms.tb_product t2 on t1.product_item_number = t2.item_number 
			inner join dms.tb_storage t3 on t1.fk_storage_id = t3.id 
			inner join dms.tb_dealer t4 on t1.fk_dealer_id = t4.dealer_id 
			group by t1.fk_storage_id,t1.fk_dealer_id,t1.product_item_number,t1.batch_no
			)t
		<include refid="adsWhere"/>
		<include refid="adsOrder"/>
	    limit #{offset},#{pagesize}
	</select>
	
	
	<select id="queryStorageDetail" resultType="dms.yijava.entity.storage.StorageDetail">
<!-- 			select * from dms.tb_storage_detail  -->
<!-- 			where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id}  -->
<!--     		and product_item_number=#{product_item_number} and batch_no =#{batch_no} -->
			select count(1) as inventory_number from dms.tb_storage_pro_detail 
			where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id} 
    		and product_item_number=#{product_item_number} and batch_no =#{batch_no}

	</select>
	
	
	<insert id="saveStorageDetail" parameterType="dms.yijava.entity.storage.StorageDetail">
		insert into dms.tb_storage_detail(fk_storage_id,fk_dealer_id,product_item_number,models,batch_no,inventory_number,valid_date)
		values(#{fk_storage_id},#{fk_dealer_id},#{product_item_number},#{models},#{batch_no},#{inventory_number},#{valid_date})
	</insert>
	
	<update id="updateStorageDetail" parameterType="dms.yijava.entity.storage.StorageDetail">
    	update dms.tb_storage_detail set inventory_number=inventory_number+#{inventory_number},models=#{models}
    	where fk_storage_id=#{fk_storage_id} and fk_dealer_id=#{fk_dealer_id} 
    	and product_item_number=#{product_item_number} and batch_no =#{batch_no}
    </update>
    

    
    
</mapper>