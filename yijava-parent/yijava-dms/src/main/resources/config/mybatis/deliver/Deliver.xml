<?xml version="1.0" encoding="UTF-8" ?>  
    <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Deliver">
	<sql id="adsWhere">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(order_code)">and order_code like CONCAT('%','${order_code}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(deliver_code)">and deliver_code like CONCAT('%','${deliver_code}','%' ) </if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(deliver_status)">and deliver_status = #{deliver_status}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(check_status)">and check_status = #{check_status}</if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(start_date)"><![CDATA[ and create_date > CONCAT(#{start_date}' 00:00:00') ]]></if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(end_date)"> <![CDATA[ and create_date < CONCAT(#{end_date}' 23:59:59')]]></if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(start_date_order)"><![CDATA[ and order_date > CONCAT(#{start_date_order}' 00:00:00') ]]></if>
			<if test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(end_date_order)"> <![CDATA[ and order_date < CONCAT(#{end_date_order}' 23:59:59')]]></if>
			<if test="dealer_ids != null and dealer_ids != '' ">AND dealer_id in (${dealer_ids})</if>
			<if test="statuses != null and statuses != '' ">AND check_status  in (${statuses})</if>
<!-- 			<if test="check_id != null and check_id != '' ">AND deliver_id in (select bussiness_id from tb_flow_record  where check_id= #{check_id} and flow_id=#{flow_id})</if> -->
			
			
		</trim>
	</sql>
	<sql id="adsOrder">
		<choose>
		    <when test="@com.yijava.orm.core.OgnlUtils@isNotEmpty(orderSql)">  
		         ORDER BY ${orderSql}
		    </when>
	    </choose>
	</sql>
    <select id="selectByObjectcount" resultType="long">
 		select count(*) from (
			select tfr.record_id,tfr.status as record_status,tfr.check_id as check_id,t1.*,t2.dealer_name from  dms.tb_deliver t1
 			left join dms.tb_dealer t2 on t1.dealer_id = t2.dealer_id
 			LEFT JOIN tb_flow_record tfr ON t1.deliver_id=tfr.bussiness_id AND check_id=#{check_id} AND flow_id=#{flow_id}
		)t	
		<include refid="adsWhere"/>
	</select>
 	<select id="selectByObject" resultType="dms.yijava.entity.deliver.Deliver">
 		select * from (
			select tfr.record_id,tfr.status as record_status,tfr.check_id as check_id,t1.*,t2.dealer_name from  dms.tb_deliver t1
 			left join dms.tb_dealer t2 on t1.dealer_id = t2.dealer_id
 			LEFT JOIN tb_flow_record tfr ON t1.deliver_id=tfr.bussiness_id AND check_id=#{check_id} AND flow_id=#{flow_id}
		)t	
		<include refid="adsWhere"/>
		<include refid="adsOrder"/>
	    limit #{offset},#{pagesize}
	</select>
		
	<select id="select" parameterType="int" resultType="dms.yijava.entity.deliver.Deliver">
		select t1.*,t3.dealer_code from 
		dms.tb_deliver t1 left join dms.tb_dealer t3 on t1.dealer_id = t3.dealer_id
		where deliver_id = #{deliver_id}
	</select>
	
	<select id="queryDeliverNo" resultType="dms.yijava.entity.deliver.Deliver" parameterType="dms.yijava.entity.deliver.Deliver">
		select LPAD(max(deliver_no)+1,3,0) as deliver_no from dms.tb_deliver WHERE dealer_id = ${dealer_id}
		and create_date between CURDATE() AND CONCAT(CURDATE(),' 23:59:59')
	</select>
	
	<insert id="insert" parameterType="dms.yijava.entity.deliver.Deliver" useGeneratedKeys="true" keyProperty="deliver_id">     
		insert into dms.tb_deliver(deliver_code,deliver_no,order_id,order_code,order_type,order_date,create_date,remark,deliver_status,user_id,dealer_id,dealer_address_id) 
		values(#{deliver_code},#{deliver_no},#{order_id},#{order_code},#{order_type},#{order_date},NOW(),#{remark},#{deliver_status},#{user_id},#{dealer_id},#{dealer_address_id});
	</insert>
	
	<insert id="update" parameterType="dms.yijava.entity.deliver.Deliver">     
		update dms.tb_deliver set remark = #{remark} where deliver_id =#{deliver_id}
	</insert>
	
	<delete id="deleteByPrimaryKey" parameterType="int">
   		 delete from dms.tb_deliver where deliver_id=#{deliver_id}
    </delete>
    
    <update id="submitExpress" parameterType="dms.yijava.entity.deliver.Deliver">
    	update dms.tb_deliver set express_code = #{express_code},express_date=#{express_date},consignee_status = 0  
    	where deliver_code =#{deliver_code}
    </update>
	
	<update id="submitDeliver" parameterType="dms.yijava.entity.deliver.Deliver">
    	update dms.tb_deliver set check_status = 1 where deliver_code =#{deliver_code}
    </update>
    
    <update id="updateDeliverStatus" parameterType="dms.yijava.entity.deliver.Deliver">
    	update dms.tb_deliver set check_status = #{check_status} where deliver_id=#{deliver_id}
    </update>

	
	<select id="viewdocument" resultType="java.util.HashMap">
		select * from ( 
			select t1.express_date,t1.consignee_date,t1.deliver_id,t1.deliver_code,
			t2.dealer_id,t2.dealer_name,t2.dealer_code,t2.attribute,
			t6.cname,t3.models,t3.express_sn,t3.validity_date,t4.product_sn,t5.deliver_remark,
			case t5.`type` when  0 then '普通订单' when 1 then '试用订单' when 2 then '退换货订单' end type
			from dms.tb_deliver t1 
			left join dms.tb_dealer t2 on t1.dealer_id = t2.dealer_id
			left join dms.tb_deliver_express_detail t3 on t1.deliver_id = t3.deliver_id
			left join dms.tb_deliver_express_detail_sn t4 on t4.deliver_express_detail_id = t3.id
			left join dms.tb_delivery_detail t5 on t3.delivery_detail_id = t5.delivery_detail_id
			left join dms.tb_product t6 on t3.product_item_number = t6.item_number
		)t where deliver_id = #{deliver_id}
	</select>


    
    
</mapper>